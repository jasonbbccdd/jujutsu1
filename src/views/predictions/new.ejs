<%# contentFor('meta') %>
<!-- anything between this line and before the next contentFor will be appended to meta -->
<title>New Prediction</title>

<%- contentFor('styles') %>
<!-- anything between this line and before the next contentFor will be appended to styles -->

<%- contentFor('scripts') %>
<!-- anything between this line and before the next contentFor will be appended to scripts -->
<script src="/scripts/mapping.js"></script>
<script src="/scripts/32.js"></script>
<script src="/scripts/brackets.js"></script>

<script>
  // const _ = require("lodash");
  let groups

  const delay = (ms) => new Promise(res => setTimeout(res, ms))
  async function showConfetti() {

  }

  const parseTournamentToGroups = (tournament) => {
    let parsedGroups = {}
    const { groups } = tournament

    const sortedGroups = groups.sort((a, b) => {
      const nameA = a.code.toUpperCase(); // ignore upper and lowercase
      const nameB = b.code.toUpperCase(); // ignore upper and lowercase
      if (nameA < nameB) {
        return -1;
      } if (nameA > nameB) {
        return 1;
      }
      return 0;
    })

    sortedGroups.forEach((sortedGroup) => {
      parsedGroups[sortedGroup.code] = {}

      sortedGroup.teamsOnGroups.forEach(teamOnGroup => {
        parsedGroups[sortedGroup.code][teamOnGroup.team.code3] = {
          id          : teamOnGroup.team.code3,
          name        : teamOnGroup.team.name,
          flag        : `${flagURL}${size1x1}${teamOnGroup.team.code2}.svg`,
          association : teamOnGroup.team.association,
          qualification: {
            'from'        : teamOnGroup.team.confederation.code,
            'method'      : ''
          }
        }
      })
    })

    return parsedGroups
  }

  const generateBackground = ({ isLoading, tournament } = {}) => {
    let $title

    if (isLoading) {
      $title = '<h1 id="page-title" class="bg-black text-center text-white py-3 mb-0">LOADING...</h1>'
    } else if (!tournament) {
      $title = '<h1 id="page-title" class="bg-black text-center text-white py-3 mb-0">Tournament Not Found</h1>'
    } else {
      $title = `<h1 id="page-title" class="bg-black text-center text-white py-3 mb-0">${tournament.name}</h1>`
    }

    return (`
      <div class="px-0 d-flex flex-column justify-content-center">
        ${$title}

        <main id="main" class="text-white">
          <div
            class="groupings-wrapper py-3"
            style="background-image: url('https://i.imgur.com/b3lc6MN.png'); background-size: cover; min-height: 100vh"
          >
            <div class="container">
              <div id="groupings" class="row justify-content-center align-items-center"></div>
            </div>
          </div>

          <div class="brackets-wrapper py-3">
            <div class="container">
              <div id="brackets" class="row"></div>
            </div>
          </div>
        </main>

        <div class="text-center my-3">
          <button id="export-prediction" class="btn btn-primary">Export</button>
          <button id="reset-prediction" class="btn btn-danger">RESET</button>
        </div>
      </div>
    `)
  }

  const generatePrediction = (info = {}) => {
    if (info?.isLoading) return ''

    // GLOBAL | Elements
    const $groupings = $('#groupings')
    const $brackets = $('#brackets')
    const $main = $('#main')

    generate32Cards(groups, $groupings)
    bind32($main, $brackets, groups)

    generateBrackets(GEN_BRACKETS_ORDER, stages, $brackets)
    bindBrackets($brackets)
  }

  const generatePage = async (info) => {
    const $page = $('#pages-predictions-new')
    const $background = generateBackground(info)
    $page.html('').append($background)

    if (info.tournament) {
      confetti().then(() => {
        generatePrediction(info)
      })
    }

    const $brackets = $('#brackets')
  }

  const getTournamentTeams = () => {
    axios({
      method: 'GET',
      url: '/api/predictions/new'
    }).then((resp) => {
      groups = parseTournamentToGroups(resp.data)
      generatePage({ tournament: resp.data })
    })
  }

  $(document).ready(() => {
    generatePage({ isLoading: true })
    getTournamentTeams()

    $('#pages-prediction-new').on('click', '#export-prediction', () => {
      console.log('click')
    })
  })
</script>


<%- contentFor('body') %>
<!-- anything between this line and before the next contentFor will be appended to body -->
<div id="pages-predictions-new"></div>
