<%- contentFor('meta') %>
<!-- anything between this line and before the next contentFor will be appended to meta -->
<title>New Prediction</title>

<%- contentFor('styles') %>
<!-- anything between this line and before the next contentFor will be appended to styles -->

<%- contentFor('scripts') %>
<!-- anything between this line and before the next contentFor will be appended to scripts -->
<script src="/scripts/mapping.js"></script>
<script src="/scripts/32.js"></script>
<script src="/scripts/brackets.js"></script>

<script>
  // const _ = require("lodash");
  let groups

  const parseTournamentToGroups = (tournament) => {
    let parsedGroups = {}
    const { groups } = tournament

    const sortedGroups = Array.from(groups).sort((a, b) => {
      const nameA = a.code.toUpperCase(); // ignore upper and lowercase
      const nameB = b.code.toUpperCase(); // ignore upper and lowercase
      if (nameA < nameB) {
        return -1;
      } if (nameA > nameB) {
        return 1;
      }
        return 0;
    })

    sortedGroups.forEach(sortedGroup => {
      let obj = {}
      sortedGroup.teamsOnGroups.forEach( group => {
          obj[group.team.code3] = {
            'id'          : group.team.code3,
            'name'        : group.team.name,
            'flag'        : group.team.code2,
            'association' : group.team.association,
          }
          obj[group.team.code3]['qualification'] = {
            'from'        : group.team.confederation.code,
            'method'      : ''
          }
      })
      // console.log(obj)
      parsedGroups[sortedGroup.code] = obj
      obj = {}
    })
    // console.log(parsedGroups)
    return parsedGroups
  }

  const generateBackground = () => {
    return (`<div id="background"><div class="overlay"></div></div>`)
  }

  const generateTitle = ({ isLoading, tournament }) => {

    if (isLoading) return '<h1 class="text-center mb-3">LOADING...</h1>'
    if (!tournament) return '<h1 class="text-center mb-3">Tournament Not Found</h1>'

    return `<h1 class="text-center mb-3">${tournament.name}</h1>`
  }

  const generatePrediction = ({ isLoading } = {}) => {
    if (isLoading) return ''

    const template32 = generate32Cards()
    // const templateBrackets = generateBrackets()

    // return `${template32} ${templateBrackets}`
    return `${template32} `
  }

  const generatePage = (info) => {
    // console.log(info)
    const $page = $('#pages-predictions-new')
    const $background = generateBackground()
    const $title = generateTitle(info)
    // const $prediction = generatePrediction(info)

    $page.html('').append($background).append($title)
  }

  const getTournamentTeams = () => {
    axios({
      method: 'GET',
      url: '/api/predictions/new'
    }).then((resp) => {
      groups = parseTournamentToGroups(resp.data)
      console.log('groupParsed')
      console.log(groups)
      generatePage({ tournament: resp.data })
    })
  }

  $(document).ready(() => {
    generatePage({ isLoading: true })
    getTournamentTeams()
  })
</script>


<%- contentFor('body') %>
<!-- anything between this line and before the next contentFor will be appended to body -->
<div id="pages-predictions-new" class="container"></div>
