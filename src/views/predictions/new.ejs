<%# contentFor('meta') %>
<!-- anything between this line and before the next contentFor will be appended to meta -->
<title>New Prediction</title>

<%- contentFor('styles') %>
<!-- anything between this line and before the next contentFor will be appended to styles -->

<%- contentFor('scripts') %>
<!-- anything between this line and before the next contentFor will be appended to scripts -->
<script src="/scripts/mapping.js"></script>
<script src="/scripts/32.js"></script>
<script src="/scripts/brackets.js"></script>

<script>
  // const _ = require("lodash");
  let groups

  const delay = (ms) => new Promise(res => setTimeout(res, ms))
  async function showConfetti() {
    await delay(3000)
    confetti()
  }

  const parseTournamentToGroups = (tournament) => {
    let parsedGroups = {}
    const { groups } = tournament

    const sortedGroups = Array.from(groups).sort((a, b) => {
      const nameA = a.code.toUpperCase(); // ignore upper and lowercase
      const nameB = b.code.toUpperCase(); // ignore upper and lowercase
      if (nameA < nameB) {
        return -1;
      } if (nameA > nameB) {
        return 1;
      }
        return 0;
    })

    sortedGroups.forEach(sortedGroup => {
      let obj = {}
      sortedGroup.teamsOnGroups.forEach( group => {
          obj[group.team.code3] = {
            'id'          : group.team.code3,
            'name'        : group.team.name,
            'flag'        : `${flagURL}${size1x1}${group.team.code2}.svg`,
            'association' : group.team.association,
          }
          obj[group.team.code3]['qualification'] = {
            'from'        : group.team.confederation.code,
            'method'      : ''
          }
      })
      parsedGroups[sortedGroup.code] = obj
      obj = {}
    })
    return parsedGroups
  }


  const generateBackground = () => {
    return (`<!-- Background image -->
    <div class="bg-image"
      style="background-image: url('https://i.imgur.com/b3lc6MN.png');
      width: 1920px;
      height: 1080px;">
      <div class="mask" style="background-color: rgba(0, 0, 0, 0.6);">
        <div class="d-flex justify-content-center align-items-center h-100">
          <h1 id="page-title" class="text-white mb-0">Page title</h1>
        </div>
      </div>
    </div>
    <!-- Background image -->
    <main id="main" class="container text-white py-2 position-absolute">
      <div id="groupings" class="row"></div>
      <div id="brackets" class="row"></div>
    </main>`
    )
  }

  const generateTitle = ({ isLoading, tournament }) => {
    //   if (isLoading) return '<h1 class="text-center mb-3">LOADING...</h1>'
    //   if (!tournament) return '<h1 class="text-center mb-3">Tournament Not Found</h1>'
    // return `<h1 class="text-center mb-3">${tournament.name}</h1>`
      if (isLoading) return 'LOADING...'
      if (!tournament) return 'Tournament Not Found'
    return tournament.name
  }

  const generatePrediction = ({ isLoading } = {}) => {
    if (isLoading) return ''
    // GLOBAL | Elements
    const $groupings = $('#groupings')
    const $brackets = $('#brackets')
    const $main = $('#main')
    const template32 = generate32Cards(groups, $groupings)
    // const templateBrackets = generateBrackets()

    // return `${template32} ${templateBrackets}`
    console.log('template32: ', template32)
    console.log('$template32: ', $(template32))
    return `${template32} `
  }

  const generatePage = (info) => {
    const $page = $('#pages-predictions-new')
    const $background = generateBackground()
    const title = generateTitle(info)
    $page.html('').append($background)
    $('#page-title').text(title)

    showConfetti()
    if (title === 'World Cup 2022') {
      const $prediction = generatePrediction(info)
    }
    $('#page-title').addClass('scroll-up')
  }

  const getTournamentTeams = () => {
    axios({
      method: 'GET',
      url: '/api/predictions/new'
    }).then((resp) => {
      groups = parseTournamentToGroups(resp.data)
      generatePage({ tournament: resp.data })
    })
  }

  $(document).ready(() => {
    generatePage({ isLoading: true })
    getTournamentTeams()
  })
</script>


<%- contentFor('body') %>
<!-- anything between this line and before the next contentFor will be appended to body -->
<div id="pages-predictions-new" class="container-fluid px-0 d-flex position-relative justify-content-center"></div>
